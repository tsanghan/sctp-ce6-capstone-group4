name: CICD

on:
  workflow_dispatch:
  #checkov:skip=CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
  push:
    branches: ["dev"]

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  Intergration:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # - name: Checkov GitHub Action
    #   uses: bridgecrewio/checkov-action@v12
    #   with:
    #     ## This will add both a CLI output to the console and create a results.sarif file
    #     output_format: cli
    #     output_file_path: console

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
        role-session-name: ${{ vars.ROLE_SESSION_NAME }}

    - name: STS Get-Caller-Identity
      run: |
          aws sts get-caller-identity

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.52.0

    - name: Show version
      run: |
        cd aws-infra
        tflint --version

    - name: Init TFLint
      run: |
        cd aws-infra
        tflint --init

    - name: Run TFLint
      run: |
        cd aws-infra
        tflint -f compact

    - name: Setup Tofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: "1.7.3"
        tofu_wrapper: false

    - name: Tofu Init
      run: |
        cd aws-infra
        tofu init

    - name: Tofu Fmt
      run: |
        cd aws-infra
        tofu fmt --recursive -check

    - name: Tofu Validate
      run: |
        cd aws-infra
        tofu validate

    - name: Todu Plan
      env:
        TF_VAR_MYIP: ${{ vars.TF_VAR_MYIP }}
      run: |
        cd aws-infra
        tofu plan

    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './eks-infra'

  Deployment:
    runs-on: ubuntu-latest
    needs: Intergration
    environment: ${{ github.ref_name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # - name: Checkov GitHub Action
    #   uses: bridgecrewio/checkov-action@v12
    #   with:
    #     ## This will add both a CLI output to the console and create a results.sarif file
    #     output_format: cli
    #     output_file_path: console

    - name: Install kubectl
      uses: tsanghan/setup-kubectl-action@main
      with:
        version: '1.31.1'

    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main
      with:
        version: 'latest'

    # - name: Run Flux CLI
    #   run: flux version --client

    - uses: azure/setup-helm@v4.2.0
      with:
          version: '3.15.3'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
        role-session-name: ${{ vars.ROLE_SESSION_NAME }}

    - name: STS Get-Caller-Identity
      run: |
          aws sts get-caller-identity

    # - name: Setup TFLint
    #   uses: terraform-linters/setup-tflint@v4
    #   with:
    #     tflint_version: v0.52.0

    # - name: Show version
    #   run: |
    #     cd aws-infra
    #     tflint --version

    # - name: Init TFLint
    #   run: |
    #     cd aws-infra
    #     tflint --init

    # - name: Run TFLint
    #   run: |
    #     cd aws-infra
    #     tflint -f compact

    - name: Setup Tofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: "1.7.3"
        tofu_wrapper: false

    - name: Tofu Init
      run: |
        cd aws-infra
        tofu init

    # - name: Tofu Fmt
    #   run: |
    #     cd aws-infra
    #     tofu fmt --recursive -check

    # - name: Tofu Validate
    #   run: |
    #     cd aws-infra
    #     tofu validate

    - name: Tofu Plan
      env:
        TF_VAR_MYIP: ${{ vars.TF_VAR_MYIP }}
      run: |
        cd aws-infra
        tofu plan

    - name: Tofu Apply
      env:
        TF_VAR_MYIP: ${{ vars.TF_VAR_MYIP }}
      run: |
        cd aws-infra
        tofu apply -auto-approve

    - name: Extract ARNs
      id: info
      run: |
        cd aws-infra
        echo "CERT_MANAGER_ROLE_ARN=$(tofu output -json | jq -r '.cert_manager_irsa_iam_role_arn.value')" >> "$GITHUB_OUTPUT"
        echo "EXTERNAL_DNS_ROLE_ARN=$(tofu output -json | jq -r '.external_dns_irsa_iam_role_arn.value')" >> "$GITHUB_OUTPUT"

    - name: Kubectl & Flux
      env:
        CERT_MANAGER_ROLE_ARN: ${{ steps.info.outputs.cert_manager_role_arn }}
        EXTERNAL_DNS_ROLE_ARN: ${{ steps.info.outputs.external_dns_role_arn}}
        ENVIRONMENT: ${{ vars.ENVIRONMENT }}
        GITHUB_TOKEN: ${{ secrets.FLUX_GITHUB_TOKEN }}
        AWS_REGION: ${{ vars.AWS_REGION }}
        ACME_SERVER: ${{ vars.ACME_SERVER }}
      run: |
        bash --version
        echo "$CERT_MANAGER_ROLE_ARN"
        echo "$EXTERNAL_DNS_ROLE_ARN"
        echo "$ENVIRONMENT"
        echo "$ACME_SERVER"
        cd eks-infra
        kubectl get po -A
        bash eks-infra.sh


